Terminals unused in grammar

   BLOCK
   CALL
   IFELSE
   INITDECL
   POS
   NEG
   NEWARRAY
   NEWSTRING
   TYPEID
   FIELD
   ROOT
   INDEX
   RETURNVOID
   VARDECL
   DECLID
   FUNCTION
   PARAM
   PROTOTYPE


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program struct
    3        | program statement
    4        | program function
    5        | program error '}'
    6        | program error ';'
    7        | /* empty */

    8 struct: STRUCT IDENT '{' '}'
    9       | fieldlist '}'

   10 fieldlist: STRUCT IDENT '{' fielddecl ';'
   11          | fieldlist fielddecl ';'

   12 fielddecl: basetype IDENT
   13          | basetype ARRAY IDENT

   14 basetype: VOID
   15         | BOOL
   16         | CHAR
   17         | INT
   18         | STRING
   19         | IDENT

   20 function: identdecl params ')' funblock
   21         | identdecl params ')' ';'
   22         | identdecl '(' ')' funblock
   23         | identdecl '(' ')' ';'

   24 params: '(' identdecl
   25       | params ',' identdecl

   26 funblock: '{' '}'
   27         | blocklist '}'

   28 statement: block
   29          | vardecl
   30          | while
   31          | ifelse
   32          | return
   33          | expr ';'

   34 block: '{' '}'
   35      | blocklist '}'
   36      | ';'

   37 blocklist: '{' statement
   38          | blocklist statement

   39 identdecl: basetype IDENT
   40          | basetype ARRAY IDENT

   41 vardecl: identdecl '=' expr ';'

   42 while: WHILE '(' expr ')' statement

   43 ifelse: IF '(' expr ')' statement
   44       | IF '(' expr ')' statement ELSE statement

   45 return: RETURN expr ';'
   46       | RETURN ';'

   47 expr: expr '=' expr
   48     | expr EQ expr
   49     | expr NE expr
   50     | expr LT expr
   51     | expr LE expr
   52     | expr GT expr
   53     | expr GE expr
   54     | expr '+' expr
   55     | expr '-' expr
   56     | expr '*' expr
   57     | expr '/' expr
   58     | expr '%' expr
   59     | '-' expr
   60     | '+' expr
   61     | '!' expr
   62     | ORD expr
   63     | CHR expr
   64     | allocator
   65     | call
   66     | '(' expr ')'
   67     | variable
   68     | constant

   69 call: IDENT '(' ')'
   70     | callist ')'

   71 callist: IDENT '(' expr
   72        | callist ',' expr

   73 allocator: NEW IDENT '(' ')'
   74          | NEW STRING '(' expr ')'
   75          | NEW basetype '[' expr ']'

   76 variable: IDENT
   77         | expr '[' expr ']'
   78         | expr '.' IDENT

   79 constant: INTCON
   80         | CHARCON
   81         | STRINGCON
   82         | FALSE
   83         | TRUE
   84         | NIL


Terminals, with rules where they appear

$end (0) 0
'!' (33) 61
'%' (37) 58
'(' (40) 22 23 24 42 43 44 66 69 71 73 74
')' (41) 20 21 22 23 42 43 44 66 69 70 73 74
'*' (42) 56
'+' (43) 54 60
',' (44) 25 72
'-' (45) 55 59
'.' (46) 78
'/' (47) 57
';' (59) 6 10 11 21 23 33 36 41 45 46
'=' (61) 41 47
'[' (91) 75 77
']' (93) 75 77
'{' (123) 8 10 26 34 37
'}' (125) 5 8 9 26 27 34 35
error (256) 5 6
VOID (258) 14
BOOL (259) 15
CHAR (260) 16
INT (261) 17
STRING (262) 18 74
IF (263) 43 44
ELSE (264) 44
WHILE (265) 42
RETURN (266) 45 46
STRUCT (267) 8 10
FALSE (268) 82
TRUE (269) 83
NIL (270) 84
NEW (271) 73 74 75
ARRAY (272) 13 40
EQ (273) 48
NE (274) 49
LT (275) 50
LE (276) 51
GT (277) 52
GE (278) 53
IDENT (279) 8 10 12 13 19 39 40 69 71 73 76 78
INTCON (280) 79
CHARCON (281) 80
STRINGCON (282) 81
BLOCK (283)
CALL (284)
IFELSE (285)
INITDECL (286)
POS (287)
NEG (288)
NEWARRAY (289)
NEWSTRING (290)
TYPEID (291)
FIELD (292)
ORD (293) 62
CHR (294) 63
ROOT (295)
INDEX (296)
RETURNVOID (297)
VARDECL (298)
DECLID (299)
FUNCTION (300)
PARAM (301)
PROTOTYPE (302)
THEN (303)
UNEG (304)
UPOS (305)


Nonterminals, with rules where they appear

$accept (67)
    on left: 0
start (68)
    on left: 1, on right: 0
program (69)
    on left: 2 3 4 5 6 7, on right: 1 2 3 4 5 6
struct (70)
    on left: 8 9, on right: 2
fieldlist (71)
    on left: 10 11, on right: 9 11
fielddecl (72)
    on left: 12 13, on right: 10 11
basetype (73)
    on left: 14 15 16 17 18 19, on right: 12 13 39 40 75
function (74)
    on left: 20 21 22 23, on right: 4
params (75)
    on left: 24 25, on right: 20 21 25
funblock (76)
    on left: 26 27, on right: 20 22
statement (77)
    on left: 28 29 30 31 32 33, on right: 3 37 38 42 43 44
block (78)
    on left: 34 35 36, on right: 28
blocklist (79)
    on left: 37 38, on right: 27 35 38
identdecl (80)
    on left: 39 40, on right: 20 21 22 23 24 25 41
vardecl (81)
    on left: 41, on right: 29
while (82)
    on left: 42, on right: 30
ifelse (83)
    on left: 43 44, on right: 31
return (84)
    on left: 45 46, on right: 32
expr (85)
    on left: 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
    65 66 67 68, on right: 33 41 42 43 44 45 47 48 49 50 51 52 53 54
    55 56 57 58 59 60 61 62 63 66 71 72 74 75 77 78
call (86)
    on left: 69 70, on right: 65
callist (87)
    on left: 71 72, on right: 70 72
allocator (88)
    on left: 73 74 75, on right: 64
variable (89)
    on left: 76 77 78, on right: 67
constant (90)
    on left: 79 80 81 82 83 84, on right: 68


state 0

    0 $accept: . start $end

    $default  reduce using rule 7 (program)

    start    go to state 1
    program  go to state 2


state 1

    0 $accept: start . $end

    $end  shift, and go to state 3


state 2

    1 start: program .
    2 program: program . struct
    3        | program . statement
    4        | program . function
    5        | program . error '}'
    6        | program . error ';'

    error      shift, and go to state 4
    VOID       shift, and go to state 5
    BOOL       shift, and go to state 6
    CHAR       shift, and go to state 7
    INT        shift, and go to state 8
    STRING     shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    RETURN     shift, and go to state 12
    STRUCT     shift, and go to state 13
    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 18
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27
    ';'        shift, and go to state 28
    '{'        shift, and go to state 29

    $end  reduce using rule 1 (start)

    struct     go to state 30
    fieldlist  go to state 31
    basetype   go to state 32
    function   go to state 33
    statement  go to state 34
    block      go to state 35
    blocklist  go to state 36
    identdecl  go to state 37
    vardecl    go to state 38
    while      go to state 39
    ifelse     go to state 40
    return     go to state 41
    expr       go to state 42
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 3

    0 $accept: start $end .

    $default  accept


state 4

    5 program: program error . '}'
    6        | program error . ';'

    '}'  shift, and go to state 48
    ';'  shift, and go to state 49


state 5

   14 basetype: VOID .

    $default  reduce using rule 14 (basetype)


state 6

   15 basetype: BOOL .

    $default  reduce using rule 15 (basetype)


state 7

   16 basetype: CHAR .

    $default  reduce using rule 16 (basetype)


state 8

   17 basetype: INT .

    $default  reduce using rule 17 (basetype)


state 9

   18 basetype: STRING .

    $default  reduce using rule 18 (basetype)


state 10

   43 ifelse: IF . '(' expr ')' statement
   44       | IF . '(' expr ')' statement ELSE statement

    '('  shift, and go to state 50


state 11

   42 while: WHILE . '(' expr ')' statement

    '('  shift, and go to state 51


state 12

   45 return: RETURN . expr ';'
   46       | RETURN . ';'

    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 52
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27
    ';'        shift, and go to state 53

    expr       go to state 54
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 13

    8 struct: STRUCT . IDENT '{' '}'
   10 fieldlist: STRUCT . IDENT '{' fielddecl ';'

    IDENT  shift, and go to state 55


state 14

   82 constant: FALSE .

    $default  reduce using rule 82 (constant)


state 15

   83 constant: TRUE .

    $default  reduce using rule 83 (constant)


state 16

   84 constant: NIL .

    $default  reduce using rule 84 (constant)


state 17

   73 allocator: NEW . IDENT '(' ')'
   74          | NEW . STRING '(' expr ')'
   75          | NEW . basetype '[' expr ']'

    VOID    shift, and go to state 5
    BOOL    shift, and go to state 6
    CHAR    shift, and go to state 7
    INT     shift, and go to state 8
    STRING  shift, and go to state 56
    IDENT   shift, and go to state 57

    basetype  go to state 58


state 18

   19 basetype: IDENT .
   69 call: IDENT . '(' ')'
   71 callist: IDENT . '(' expr
   76 variable: IDENT .

    '('  shift, and go to state 59

    ARRAY     reduce using rule 19 (basetype)
    IDENT     reduce using rule 19 (basetype)
    $default  reduce using rule 76 (variable)


state 19

   79 constant: INTCON .

    $default  reduce using rule 79 (constant)


state 20

   80 constant: CHARCON .

    $default  reduce using rule 80 (constant)


state 21

   81 constant: STRINGCON .

    $default  reduce using rule 81 (constant)


state 22

   62 expr: ORD . expr

    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 52
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27

    expr       go to state 60
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 23

   63 expr: CHR . expr

    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 52
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27

    expr       go to state 61
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 24

   60 expr: '+' . expr

    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 52
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27

    expr       go to state 62
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 25

   59 expr: '-' . expr

    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 52
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27

    expr       go to state 63
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 26

   61 expr: '!' . expr

    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 52
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27

    expr       go to state 64
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 27

   66 expr: '(' . expr ')'

    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 52
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27

    expr       go to state 65
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 28

   36 block: ';' .

    $default  reduce using rule 36 (block)


state 29

   34 block: '{' . '}'
   37 blocklist: '{' . statement

    VOID       shift, and go to state 5
    BOOL       shift, and go to state 6
    CHAR       shift, and go to state 7
    INT        shift, and go to state 8
    STRING     shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    RETURN     shift, and go to state 12
    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 18
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27
    '}'        shift, and go to state 66
    ';'        shift, and go to state 28
    '{'        shift, and go to state 29

    basetype   go to state 32
    statement  go to state 67
    block      go to state 35
    blocklist  go to state 36
    identdecl  go to state 68
    vardecl    go to state 38
    while      go to state 39
    ifelse     go to state 40
    return     go to state 41
    expr       go to state 42
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 30

    2 program: program struct .

    $default  reduce using rule 2 (program)


state 31

    9 struct: fieldlist . '}'
   11 fieldlist: fieldlist . fielddecl ';'

    VOID    shift, and go to state 5
    BOOL    shift, and go to state 6
    CHAR    shift, and go to state 7
    INT     shift, and go to state 8
    STRING  shift, and go to state 9
    IDENT   shift, and go to state 69
    '}'     shift, and go to state 70

    fielddecl  go to state 71
    basetype   go to state 72


state 32

   39 identdecl: basetype . IDENT
   40          | basetype . ARRAY IDENT

    ARRAY  shift, and go to state 73
    IDENT  shift, and go to state 74


state 33

    4 program: program function .

    $default  reduce using rule 4 (program)


state 34

    3 program: program statement .

    $default  reduce using rule 3 (program)


state 35

   28 statement: block .

    $default  reduce using rule 28 (statement)


state 36

   35 block: blocklist . '}'
   38 blocklist: blocklist . statement

    VOID       shift, and go to state 5
    BOOL       shift, and go to state 6
    CHAR       shift, and go to state 7
    INT        shift, and go to state 8
    STRING     shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    RETURN     shift, and go to state 12
    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 18
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27
    '}'        shift, and go to state 75
    ';'        shift, and go to state 28
    '{'        shift, and go to state 29

    basetype   go to state 32
    statement  go to state 76
    block      go to state 35
    blocklist  go to state 36
    identdecl  go to state 68
    vardecl    go to state 38
    while      go to state 39
    ifelse     go to state 40
    return     go to state 41
    expr       go to state 42
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 37

   20 function: identdecl . params ')' funblock
   21         | identdecl . params ')' ';'
   22         | identdecl . '(' ')' funblock
   23         | identdecl . '(' ')' ';'
   41 vardecl: identdecl . '=' expr ';'

    '='  shift, and go to state 77
    '('  shift, and go to state 78

    params  go to state 79


state 38

   29 statement: vardecl .

    $default  reduce using rule 29 (statement)


state 39

   30 statement: while .

    $default  reduce using rule 30 (statement)


state 40

   31 statement: ifelse .

    $default  reduce using rule 31 (statement)


state 41

   32 statement: return .

    $default  reduce using rule 32 (statement)


state 42

   33 statement: expr . ';'
   47 expr: expr . '=' expr
   48     | expr . EQ expr
   49     | expr . NE expr
   50     | expr . LT expr
   51     | expr . LE expr
   52     | expr . GT expr
   53     | expr . GE expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   77 variable: expr . '[' expr ']'
   78         | expr . '.' IDENT

    EQ   shift, and go to state 80
    NE   shift, and go to state 81
    LT   shift, and go to state 82
    LE   shift, and go to state 83
    GT   shift, and go to state 84
    GE   shift, and go to state 85
    '='  shift, and go to state 86
    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91
    '['  shift, and go to state 92
    '.'  shift, and go to state 93
    ';'  shift, and go to state 94


state 43

   65 expr: call .

    $default  reduce using rule 65 (expr)


state 44

   70 call: callist . ')'
   72 callist: callist . ',' expr

    ')'  shift, and go to state 95
    ','  shift, and go to state 96


state 45

   64 expr: allocator .

    $default  reduce using rule 64 (expr)


state 46

   67 expr: variable .

    $default  reduce using rule 67 (expr)


state 47

   68 expr: constant .

    $default  reduce using rule 68 (expr)


state 48

    5 program: program error '}' .

    $default  reduce using rule 5 (program)


state 49

    6 program: program error ';' .

    $default  reduce using rule 6 (program)


state 50

   43 ifelse: IF '(' . expr ')' statement
   44       | IF '(' . expr ')' statement ELSE statement

    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 52
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27

    expr       go to state 97
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 51

   42 while: WHILE '(' . expr ')' statement

    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 52
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27

    expr       go to state 98
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 52

   69 call: IDENT . '(' ')'
   71 callist: IDENT . '(' expr
   76 variable: IDENT .

    '('  shift, and go to state 59

    $default  reduce using rule 76 (variable)


state 53

   46 return: RETURN ';' .

    $default  reduce using rule 46 (return)


state 54

   45 return: RETURN expr . ';'
   47 expr: expr . '=' expr
   48     | expr . EQ expr
   49     | expr . NE expr
   50     | expr . LT expr
   51     | expr . LE expr
   52     | expr . GT expr
   53     | expr . GE expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   77 variable: expr . '[' expr ']'
   78         | expr . '.' IDENT

    EQ   shift, and go to state 80
    NE   shift, and go to state 81
    LT   shift, and go to state 82
    LE   shift, and go to state 83
    GT   shift, and go to state 84
    GE   shift, and go to state 85
    '='  shift, and go to state 86
    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91
    '['  shift, and go to state 92
    '.'  shift, and go to state 93
    ';'  shift, and go to state 99


state 55

    8 struct: STRUCT IDENT . '{' '}'
   10 fieldlist: STRUCT IDENT . '{' fielddecl ';'

    '{'  shift, and go to state 100


state 56

   18 basetype: STRING .
   74 allocator: NEW STRING . '(' expr ')'

    '('  shift, and go to state 101

    $default  reduce using rule 18 (basetype)


state 57

   19 basetype: IDENT .
   73 allocator: NEW IDENT . '(' ')'

    '('  shift, and go to state 102

    $default  reduce using rule 19 (basetype)


state 58

   75 allocator: NEW basetype . '[' expr ']'

    '['  shift, and go to state 103


state 59

   69 call: IDENT '(' . ')'
   71 callist: IDENT '(' . expr

    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 52
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27
    ')'        shift, and go to state 104

    expr       go to state 105
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 60

   47 expr: expr . '=' expr
   48     | expr . EQ expr
   49     | expr . NE expr
   50     | expr . LT expr
   51     | expr . LE expr
   52     | expr . GT expr
   53     | expr . GE expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   62     | ORD expr .
   77 variable: expr . '[' expr ']'
   78         | expr . '.' IDENT

    '['  shift, and go to state 92
    '.'  shift, and go to state 93

    $default  reduce using rule 62 (expr)


state 61

   47 expr: expr . '=' expr
   48     | expr . EQ expr
   49     | expr . NE expr
   50     | expr . LT expr
   51     | expr . LE expr
   52     | expr . GT expr
   53     | expr . GE expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   63     | CHR expr .
   77 variable: expr . '[' expr ']'
   78         | expr . '.' IDENT

    '['  shift, and go to state 92
    '.'  shift, and go to state 93

    $default  reduce using rule 63 (expr)


state 62

   47 expr: expr . '=' expr
   48     | expr . EQ expr
   49     | expr . NE expr
   50     | expr . LT expr
   51     | expr . LE expr
   52     | expr . GT expr
   53     | expr . GE expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   60     | '+' expr .
   77 variable: expr . '[' expr ']'
   78         | expr . '.' IDENT

    '['  shift, and go to state 92
    '.'  shift, and go to state 93

    $default  reduce using rule 60 (expr)


state 63

   47 expr: expr . '=' expr
   48     | expr . EQ expr
   49     | expr . NE expr
   50     | expr . LT expr
   51     | expr . LE expr
   52     | expr . GT expr
   53     | expr . GE expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | '-' expr .
   77 variable: expr . '[' expr ']'
   78         | expr . '.' IDENT

    '['  shift, and go to state 92
    '.'  shift, and go to state 93

    $default  reduce using rule 59 (expr)


state 64

   47 expr: expr . '=' expr
   48     | expr . EQ expr
   49     | expr . NE expr
   50     | expr . LT expr
   51     | expr . LE expr
   52     | expr . GT expr
   53     | expr . GE expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   61     | '!' expr .
   77 variable: expr . '[' expr ']'
   78         | expr . '.' IDENT

    '['  shift, and go to state 92
    '.'  shift, and go to state 93

    $default  reduce using rule 61 (expr)


state 65

   47 expr: expr . '=' expr
   48     | expr . EQ expr
   49     | expr . NE expr
   50     | expr . LT expr
   51     | expr . LE expr
   52     | expr . GT expr
   53     | expr . GE expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   66     | '(' expr . ')'
   77 variable: expr . '[' expr ']'
   78         | expr . '.' IDENT

    EQ   shift, and go to state 80
    NE   shift, and go to state 81
    LT   shift, and go to state 82
    LE   shift, and go to state 83
    GT   shift, and go to state 84
    GE   shift, and go to state 85
    '='  shift, and go to state 86
    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91
    '['  shift, and go to state 92
    '.'  shift, and go to state 93
    ')'  shift, and go to state 106


state 66

   34 block: '{' '}' .

    $default  reduce using rule 34 (block)


state 67

   37 blocklist: '{' statement .

    $default  reduce using rule 37 (blocklist)


state 68

   41 vardecl: identdecl . '=' expr ';'

    '='  shift, and go to state 77


state 69

   19 basetype: IDENT .

    $default  reduce using rule 19 (basetype)


state 70

    9 struct: fieldlist '}' .

    $default  reduce using rule 9 (struct)


state 71

   11 fieldlist: fieldlist fielddecl . ';'

    ';'  shift, and go to state 107


state 72

   12 fielddecl: basetype . IDENT
   13          | basetype . ARRAY IDENT

    ARRAY  shift, and go to state 108
    IDENT  shift, and go to state 109


state 73

   40 identdecl: basetype ARRAY . IDENT

    IDENT  shift, and go to state 110


state 74

   39 identdecl: basetype IDENT .

    $default  reduce using rule 39 (identdecl)


state 75

   35 block: blocklist '}' .

    $default  reduce using rule 35 (block)


state 76

   38 blocklist: blocklist statement .

    $default  reduce using rule 38 (blocklist)


state 77

   41 vardecl: identdecl '=' . expr ';'

    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 52
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27

    expr       go to state 111
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 78

   22 function: identdecl '(' . ')' funblock
   23         | identdecl '(' . ')' ';'
   24 params: '(' . identdecl

    VOID    shift, and go to state 5
    BOOL    shift, and go to state 6
    CHAR    shift, and go to state 7
    INT     shift, and go to state 8
    STRING  shift, and go to state 9
    IDENT   shift, and go to state 69
    ')'     shift, and go to state 112

    basetype   go to state 32
    identdecl  go to state 113


state 79

   20 function: identdecl params . ')' funblock
   21         | identdecl params . ')' ';'
   25 params: params . ',' identdecl

    ')'  shift, and go to state 114
    ','  shift, and go to state 115


state 80

   48 expr: expr EQ . expr

    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 52
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27

    expr       go to state 116
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 81

   49 expr: expr NE . expr

    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 52
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27

    expr       go to state 117
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 82

   50 expr: expr LT . expr

    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 52
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27

    expr       go to state 118
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 83

   51 expr: expr LE . expr

    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 52
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27

    expr       go to state 119
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 84

   52 expr: expr GT . expr

    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 52
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27

    expr       go to state 120
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 85

   53 expr: expr GE . expr

    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 52
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27

    expr       go to state 121
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 86

   47 expr: expr '=' . expr

    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 52
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27

    expr       go to state 122
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 87

   54 expr: expr '+' . expr

    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 52
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27

    expr       go to state 123
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 88

   55 expr: expr '-' . expr

    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 52
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27

    expr       go to state 124
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 89

   56 expr: expr '*' . expr

    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 52
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27

    expr       go to state 125
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 90

   57 expr: expr '/' . expr

    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 52
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27

    expr       go to state 126
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 91

   58 expr: expr '%' . expr

    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 52
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27

    expr       go to state 127
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 92

   77 variable: expr '[' . expr ']'

    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 52
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27

    expr       go to state 128
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 93

   78 variable: expr '.' . IDENT

    IDENT  shift, and go to state 129


state 94

   33 statement: expr ';' .

    $default  reduce using rule 33 (statement)


state 95

   70 call: callist ')' .

    $default  reduce using rule 70 (call)


state 96

   72 callist: callist ',' . expr

    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 52
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27

    expr       go to state 130
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 97

   43 ifelse: IF '(' expr . ')' statement
   44       | IF '(' expr . ')' statement ELSE statement
   47 expr: expr . '=' expr
   48     | expr . EQ expr
   49     | expr . NE expr
   50     | expr . LT expr
   51     | expr . LE expr
   52     | expr . GT expr
   53     | expr . GE expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   77 variable: expr . '[' expr ']'
   78         | expr . '.' IDENT

    EQ   shift, and go to state 80
    NE   shift, and go to state 81
    LT   shift, and go to state 82
    LE   shift, and go to state 83
    GT   shift, and go to state 84
    GE   shift, and go to state 85
    '='  shift, and go to state 86
    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91
    '['  shift, and go to state 92
    '.'  shift, and go to state 93
    ')'  shift, and go to state 131


state 98

   42 while: WHILE '(' expr . ')' statement
   47 expr: expr . '=' expr
   48     | expr . EQ expr
   49     | expr . NE expr
   50     | expr . LT expr
   51     | expr . LE expr
   52     | expr . GT expr
   53     | expr . GE expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   77 variable: expr . '[' expr ']'
   78         | expr . '.' IDENT

    EQ   shift, and go to state 80
    NE   shift, and go to state 81
    LT   shift, and go to state 82
    LE   shift, and go to state 83
    GT   shift, and go to state 84
    GE   shift, and go to state 85
    '='  shift, and go to state 86
    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91
    '['  shift, and go to state 92
    '.'  shift, and go to state 93
    ')'  shift, and go to state 132


state 99

   45 return: RETURN expr ';' .

    $default  reduce using rule 45 (return)


state 100

    8 struct: STRUCT IDENT '{' . '}'
   10 fieldlist: STRUCT IDENT '{' . fielddecl ';'

    VOID    shift, and go to state 5
    BOOL    shift, and go to state 6
    CHAR    shift, and go to state 7
    INT     shift, and go to state 8
    STRING  shift, and go to state 9
    IDENT   shift, and go to state 69
    '}'     shift, and go to state 133

    fielddecl  go to state 134
    basetype   go to state 72


state 101

   74 allocator: NEW STRING '(' . expr ')'

    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 52
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27

    expr       go to state 135
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 102

   73 allocator: NEW IDENT '(' . ')'

    ')'  shift, and go to state 136


state 103

   75 allocator: NEW basetype '[' . expr ']'

    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 52
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27

    expr       go to state 137
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 104

   69 call: IDENT '(' ')' .

    $default  reduce using rule 69 (call)


state 105

   47 expr: expr . '=' expr
   48     | expr . EQ expr
   49     | expr . NE expr
   50     | expr . LT expr
   51     | expr . LE expr
   52     | expr . GT expr
   53     | expr . GE expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   71 callist: IDENT '(' expr .
   77 variable: expr . '[' expr ']'
   78         | expr . '.' IDENT

    EQ   shift, and go to state 80
    NE   shift, and go to state 81
    LT   shift, and go to state 82
    LE   shift, and go to state 83
    GT   shift, and go to state 84
    GE   shift, and go to state 85
    '='  shift, and go to state 86
    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91
    '['  shift, and go to state 92
    '.'  shift, and go to state 93

    $default  reduce using rule 71 (callist)


state 106

   66 expr: '(' expr ')' .

    $default  reduce using rule 66 (expr)


state 107

   11 fieldlist: fieldlist fielddecl ';' .

    $default  reduce using rule 11 (fieldlist)


state 108

   13 fielddecl: basetype ARRAY . IDENT

    IDENT  shift, and go to state 138


state 109

   12 fielddecl: basetype IDENT .

    $default  reduce using rule 12 (fielddecl)


state 110

   40 identdecl: basetype ARRAY IDENT .

    $default  reduce using rule 40 (identdecl)


state 111

   41 vardecl: identdecl '=' expr . ';'
   47 expr: expr . '=' expr
   48     | expr . EQ expr
   49     | expr . NE expr
   50     | expr . LT expr
   51     | expr . LE expr
   52     | expr . GT expr
   53     | expr . GE expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   77 variable: expr . '[' expr ']'
   78         | expr . '.' IDENT

    EQ   shift, and go to state 80
    NE   shift, and go to state 81
    LT   shift, and go to state 82
    LE   shift, and go to state 83
    GT   shift, and go to state 84
    GE   shift, and go to state 85
    '='  shift, and go to state 86
    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91
    '['  shift, and go to state 92
    '.'  shift, and go to state 93
    ';'  shift, and go to state 139


state 112

   22 function: identdecl '(' ')' . funblock
   23         | identdecl '(' ')' . ';'

    ';'  shift, and go to state 140
    '{'  shift, and go to state 141

    funblock   go to state 142
    blocklist  go to state 143


state 113

   24 params: '(' identdecl .

    $default  reduce using rule 24 (params)


state 114

   20 function: identdecl params ')' . funblock
   21         | identdecl params ')' . ';'

    ';'  shift, and go to state 144
    '{'  shift, and go to state 141

    funblock   go to state 145
    blocklist  go to state 143


state 115

   25 params: params ',' . identdecl

    VOID    shift, and go to state 5
    BOOL    shift, and go to state 6
    CHAR    shift, and go to state 7
    INT     shift, and go to state 8
    STRING  shift, and go to state 9
    IDENT   shift, and go to state 69

    basetype   go to state 32
    identdecl  go to state 146


state 116

   47 expr: expr . '=' expr
   48     | expr . EQ expr
   48     | expr EQ expr .
   49     | expr . NE expr
   50     | expr . LT expr
   51     | expr . LE expr
   52     | expr . GT expr
   53     | expr . GE expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   77 variable: expr . '[' expr ']'
   78         | expr . '.' IDENT

    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91
    '['  shift, and go to state 92
    '.'  shift, and go to state 93

    $default  reduce using rule 48 (expr)


state 117

   47 expr: expr . '=' expr
   48     | expr . EQ expr
   49     | expr . NE expr
   49     | expr NE expr .
   50     | expr . LT expr
   51     | expr . LE expr
   52     | expr . GT expr
   53     | expr . GE expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   77 variable: expr . '[' expr ']'
   78         | expr . '.' IDENT

    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91
    '['  shift, and go to state 92
    '.'  shift, and go to state 93

    $default  reduce using rule 49 (expr)


state 118

   47 expr: expr . '=' expr
   48     | expr . EQ expr
   49     | expr . NE expr
   50     | expr . LT expr
   50     | expr LT expr .
   51     | expr . LE expr
   52     | expr . GT expr
   53     | expr . GE expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   77 variable: expr . '[' expr ']'
   78         | expr . '.' IDENT

    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91
    '['  shift, and go to state 92
    '.'  shift, and go to state 93

    $default  reduce using rule 50 (expr)


state 119

   47 expr: expr . '=' expr
   48     | expr . EQ expr
   49     | expr . NE expr
   50     | expr . LT expr
   51     | expr . LE expr
   51     | expr LE expr .
   52     | expr . GT expr
   53     | expr . GE expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   77 variable: expr . '[' expr ']'
   78         | expr . '.' IDENT

    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91
    '['  shift, and go to state 92
    '.'  shift, and go to state 93

    $default  reduce using rule 51 (expr)


state 120

   47 expr: expr . '=' expr
   48     | expr . EQ expr
   49     | expr . NE expr
   50     | expr . LT expr
   51     | expr . LE expr
   52     | expr . GT expr
   52     | expr GT expr .
   53     | expr . GE expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   77 variable: expr . '[' expr ']'
   78         | expr . '.' IDENT

    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91
    '['  shift, and go to state 92
    '.'  shift, and go to state 93

    $default  reduce using rule 52 (expr)


state 121

   47 expr: expr . '=' expr
   48     | expr . EQ expr
   49     | expr . NE expr
   50     | expr . LT expr
   51     | expr . LE expr
   52     | expr . GT expr
   53     | expr . GE expr
   53     | expr GE expr .
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   77 variable: expr . '[' expr ']'
   78         | expr . '.' IDENT

    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91
    '['  shift, and go to state 92
    '.'  shift, and go to state 93

    $default  reduce using rule 53 (expr)


state 122

   47 expr: expr . '=' expr
   47     | expr '=' expr .
   48     | expr . EQ expr
   49     | expr . NE expr
   50     | expr . LT expr
   51     | expr . LE expr
   52     | expr . GT expr
   53     | expr . GE expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   77 variable: expr . '[' expr ']'
   78         | expr . '.' IDENT

    EQ   shift, and go to state 80
    NE   shift, and go to state 81
    LT   shift, and go to state 82
    LE   shift, and go to state 83
    GT   shift, and go to state 84
    GE   shift, and go to state 85
    '='  shift, and go to state 86
    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91
    '['  shift, and go to state 92
    '.'  shift, and go to state 93

    $default  reduce using rule 47 (expr)


state 123

   47 expr: expr . '=' expr
   48     | expr . EQ expr
   49     | expr . NE expr
   50     | expr . LT expr
   51     | expr . LE expr
   52     | expr . GT expr
   53     | expr . GE expr
   54     | expr . '+' expr
   54     | expr '+' expr .
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   77 variable: expr . '[' expr ']'
   78         | expr . '.' IDENT

    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91
    '['  shift, and go to state 92
    '.'  shift, and go to state 93

    $default  reduce using rule 54 (expr)


state 124

   47 expr: expr . '=' expr
   48     | expr . EQ expr
   49     | expr . NE expr
   50     | expr . LT expr
   51     | expr . LE expr
   52     | expr . GT expr
   53     | expr . GE expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   55     | expr '-' expr .
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   77 variable: expr . '[' expr ']'
   78         | expr . '.' IDENT

    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91
    '['  shift, and go to state 92
    '.'  shift, and go to state 93

    $default  reduce using rule 55 (expr)


state 125

   47 expr: expr . '=' expr
   48     | expr . EQ expr
   49     | expr . NE expr
   50     | expr . LT expr
   51     | expr . LE expr
   52     | expr . GT expr
   53     | expr . GE expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   56     | expr '*' expr .
   57     | expr . '/' expr
   58     | expr . '%' expr
   77 variable: expr . '[' expr ']'
   78         | expr . '.' IDENT

    '['  shift, and go to state 92
    '.'  shift, and go to state 93

    $default  reduce using rule 56 (expr)


state 126

   47 expr: expr . '=' expr
   48     | expr . EQ expr
   49     | expr . NE expr
   50     | expr . LT expr
   51     | expr . LE expr
   52     | expr . GT expr
   53     | expr . GE expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   57     | expr '/' expr .
   58     | expr . '%' expr
   77 variable: expr . '[' expr ']'
   78         | expr . '.' IDENT

    '['  shift, and go to state 92
    '.'  shift, and go to state 93

    $default  reduce using rule 57 (expr)


state 127

   47 expr: expr . '=' expr
   48     | expr . EQ expr
   49     | expr . NE expr
   50     | expr . LT expr
   51     | expr . LE expr
   52     | expr . GT expr
   53     | expr . GE expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   58     | expr '%' expr .
   77 variable: expr . '[' expr ']'
   78         | expr . '.' IDENT

    '['  shift, and go to state 92
    '.'  shift, and go to state 93

    $default  reduce using rule 58 (expr)


state 128

   47 expr: expr . '=' expr
   48     | expr . EQ expr
   49     | expr . NE expr
   50     | expr . LT expr
   51     | expr . LE expr
   52     | expr . GT expr
   53     | expr . GE expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   77 variable: expr . '[' expr ']'
   77         | expr '[' expr . ']'
   78         | expr . '.' IDENT

    EQ   shift, and go to state 80
    NE   shift, and go to state 81
    LT   shift, and go to state 82
    LE   shift, and go to state 83
    GT   shift, and go to state 84
    GE   shift, and go to state 85
    '='  shift, and go to state 86
    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91
    '['  shift, and go to state 92
    '.'  shift, and go to state 93
    ']'  shift, and go to state 147


state 129

   78 variable: expr '.' IDENT .

    $default  reduce using rule 78 (variable)


state 130

   47 expr: expr . '=' expr
   48     | expr . EQ expr
   49     | expr . NE expr
   50     | expr . LT expr
   51     | expr . LE expr
   52     | expr . GT expr
   53     | expr . GE expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   72 callist: callist ',' expr .
   77 variable: expr . '[' expr ']'
   78         | expr . '.' IDENT

    EQ   shift, and go to state 80
    NE   shift, and go to state 81
    LT   shift, and go to state 82
    LE   shift, and go to state 83
    GT   shift, and go to state 84
    GE   shift, and go to state 85
    '='  shift, and go to state 86
    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91
    '['  shift, and go to state 92
    '.'  shift, and go to state 93

    $default  reduce using rule 72 (callist)


state 131

   43 ifelse: IF '(' expr ')' . statement
   44       | IF '(' expr ')' . statement ELSE statement

    VOID       shift, and go to state 5
    BOOL       shift, and go to state 6
    CHAR       shift, and go to state 7
    INT        shift, and go to state 8
    STRING     shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    RETURN     shift, and go to state 12
    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 18
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27
    ';'        shift, and go to state 28
    '{'        shift, and go to state 29

    basetype   go to state 32
    statement  go to state 148
    block      go to state 35
    blocklist  go to state 36
    identdecl  go to state 68
    vardecl    go to state 38
    while      go to state 39
    ifelse     go to state 40
    return     go to state 41
    expr       go to state 42
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 132

   42 while: WHILE '(' expr ')' . statement

    VOID       shift, and go to state 5
    BOOL       shift, and go to state 6
    CHAR       shift, and go to state 7
    INT        shift, and go to state 8
    STRING     shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    RETURN     shift, and go to state 12
    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 18
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27
    ';'        shift, and go to state 28
    '{'        shift, and go to state 29

    basetype   go to state 32
    statement  go to state 149
    block      go to state 35
    blocklist  go to state 36
    identdecl  go to state 68
    vardecl    go to state 38
    while      go to state 39
    ifelse     go to state 40
    return     go to state 41
    expr       go to state 42
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 133

    8 struct: STRUCT IDENT '{' '}' .

    $default  reduce using rule 8 (struct)


state 134

   10 fieldlist: STRUCT IDENT '{' fielddecl . ';'

    ';'  shift, and go to state 150


state 135

   47 expr: expr . '=' expr
   48     | expr . EQ expr
   49     | expr . NE expr
   50     | expr . LT expr
   51     | expr . LE expr
   52     | expr . GT expr
   53     | expr . GE expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   74 allocator: NEW STRING '(' expr . ')'
   77 variable: expr . '[' expr ']'
   78         | expr . '.' IDENT

    EQ   shift, and go to state 80
    NE   shift, and go to state 81
    LT   shift, and go to state 82
    LE   shift, and go to state 83
    GT   shift, and go to state 84
    GE   shift, and go to state 85
    '='  shift, and go to state 86
    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91
    '['  shift, and go to state 92
    '.'  shift, and go to state 93
    ')'  shift, and go to state 151


state 136

   73 allocator: NEW IDENT '(' ')' .

    $default  reduce using rule 73 (allocator)


state 137

   47 expr: expr . '=' expr
   48     | expr . EQ expr
   49     | expr . NE expr
   50     | expr . LT expr
   51     | expr . LE expr
   52     | expr . GT expr
   53     | expr . GE expr
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   75 allocator: NEW basetype '[' expr . ']'
   77 variable: expr . '[' expr ']'
   78         | expr . '.' IDENT

    EQ   shift, and go to state 80
    NE   shift, and go to state 81
    LT   shift, and go to state 82
    LE   shift, and go to state 83
    GT   shift, and go to state 84
    GE   shift, and go to state 85
    '='  shift, and go to state 86
    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91
    '['  shift, and go to state 92
    '.'  shift, and go to state 93
    ']'  shift, and go to state 152


state 138

   13 fielddecl: basetype ARRAY IDENT .

    $default  reduce using rule 13 (fielddecl)


state 139

   41 vardecl: identdecl '=' expr ';' .

    $default  reduce using rule 41 (vardecl)


state 140

   23 function: identdecl '(' ')' ';' .

    $default  reduce using rule 23 (function)


state 141

   26 funblock: '{' . '}'
   37 blocklist: '{' . statement

    VOID       shift, and go to state 5
    BOOL       shift, and go to state 6
    CHAR       shift, and go to state 7
    INT        shift, and go to state 8
    STRING     shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    RETURN     shift, and go to state 12
    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 18
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27
    '}'        shift, and go to state 153
    ';'        shift, and go to state 28
    '{'        shift, and go to state 29

    basetype   go to state 32
    statement  go to state 67
    block      go to state 35
    blocklist  go to state 36
    identdecl  go to state 68
    vardecl    go to state 38
    while      go to state 39
    ifelse     go to state 40
    return     go to state 41
    expr       go to state 42
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 142

   22 function: identdecl '(' ')' funblock .

    $default  reduce using rule 22 (function)


state 143

   27 funblock: blocklist . '}'
   38 blocklist: blocklist . statement

    VOID       shift, and go to state 5
    BOOL       shift, and go to state 6
    CHAR       shift, and go to state 7
    INT        shift, and go to state 8
    STRING     shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    RETURN     shift, and go to state 12
    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 18
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27
    '}'        shift, and go to state 154
    ';'        shift, and go to state 28
    '{'        shift, and go to state 29

    basetype   go to state 32
    statement  go to state 76
    block      go to state 35
    blocklist  go to state 36
    identdecl  go to state 68
    vardecl    go to state 38
    while      go to state 39
    ifelse     go to state 40
    return     go to state 41
    expr       go to state 42
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 144

   21 function: identdecl params ')' ';' .

    $default  reduce using rule 21 (function)


state 145

   20 function: identdecl params ')' funblock .

    $default  reduce using rule 20 (function)


state 146

   25 params: params ',' identdecl .

    $default  reduce using rule 25 (params)


state 147

   77 variable: expr '[' expr ']' .

    $default  reduce using rule 77 (variable)


state 148

   43 ifelse: IF '(' expr ')' statement .
   44       | IF '(' expr ')' statement . ELSE statement

    ELSE  shift, and go to state 155

    $default  reduce using rule 43 (ifelse)


state 149

   42 while: WHILE '(' expr ')' statement .

    $default  reduce using rule 42 (while)


state 150

   10 fieldlist: STRUCT IDENT '{' fielddecl ';' .

    $default  reduce using rule 10 (fieldlist)


state 151

   74 allocator: NEW STRING '(' expr ')' .

    $default  reduce using rule 74 (allocator)


state 152

   75 allocator: NEW basetype '[' expr ']' .

    $default  reduce using rule 75 (allocator)


state 153

   26 funblock: '{' '}' .

    $default  reduce using rule 26 (funblock)


state 154

   27 funblock: blocklist '}' .

    $default  reduce using rule 27 (funblock)


state 155

   44 ifelse: IF '(' expr ')' statement ELSE . statement

    VOID       shift, and go to state 5
    BOOL       shift, and go to state 6
    CHAR       shift, and go to state 7
    INT        shift, and go to state 8
    STRING     shift, and go to state 9
    IF         shift, and go to state 10
    WHILE      shift, and go to state 11
    RETURN     shift, and go to state 12
    FALSE      shift, and go to state 14
    TRUE       shift, and go to state 15
    NIL        shift, and go to state 16
    NEW        shift, and go to state 17
    IDENT      shift, and go to state 18
    INTCON     shift, and go to state 19
    CHARCON    shift, and go to state 20
    STRINGCON  shift, and go to state 21
    ORD        shift, and go to state 22
    CHR        shift, and go to state 23
    '+'        shift, and go to state 24
    '-'        shift, and go to state 25
    '!'        shift, and go to state 26
    '('        shift, and go to state 27
    ';'        shift, and go to state 28
    '{'        shift, and go to state 29

    basetype   go to state 32
    statement  go to state 156
    block      go to state 35
    blocklist  go to state 36
    identdecl  go to state 68
    vardecl    go to state 38
    while      go to state 39
    ifelse     go to state 40
    return     go to state 41
    expr       go to state 42
    call       go to state 43
    callist    go to state 44
    allocator  go to state 45
    variable   go to state 46
    constant   go to state 47


state 156

   44 ifelse: IF '(' expr ')' statement ELSE statement .

    $default  reduce using rule 44 (ifelse)
